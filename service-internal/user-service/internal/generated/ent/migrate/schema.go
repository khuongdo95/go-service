// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// IPAccessControlsColumns holds the columns for the "ip_access_controls" table.
	IPAccessControlsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeString},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "ip_address", Type: field.TypeString},
		{Name: "tcp_stage", Type: field.TypeBool, Default: false},
		{Name: "tcp_live", Type: field.TypeBool, Default: false},
		{Name: "rabbitmq_stage", Type: field.TypeBool, Default: false},
		{Name: "rabbitmq_live", Type: field.TypeBool, Default: false},
		{Name: "translations_rmq", Type: field.TypeBool, Default: false},
		{Name: "translations_tcp", Type: field.TypeBool, Default: false},
		{Name: "active", Type: field.TypeBool, Default: true},
	}
	// IPAccessControlsTable holds the schema information for the "ip_access_controls" table.
	IPAccessControlsTable = &schema.Table{
		Name:       "ip_access_controls",
		Columns:    IPAccessControlsColumns,
		PrimaryKey: []*schema.Column{IPAccessControlsColumns[0]},
	}
	// IdentitiesColumns holds the columns for the "identities" table.
	IdentitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "username", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeString},
	}
	// IdentitiesTable holds the schema information for the "identities" table.
	IdentitiesTable = &schema.Table{
		Name:       "identities",
		Columns:    IdentitiesColumns,
		PrimaryKey: []*schema.Column{IdentitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "identities_users_identity",
				Columns:    []*schema.Column{IdentitiesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "identity_username",
				Unique:  true,
				Columns: []*schema.Column{IdentitiesColumns[3]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "created_by", Type: field.TypeString},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserIPWhiteListsColumns holds the columns for the "user_ip_white_lists" table.
	UserIPWhiteListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "ip_address", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeString},
	}
	// UserIPWhiteListsTable holds the schema information for the "user_ip_white_lists" table.
	UserIPWhiteListsTable = &schema.Table{
		Name:       "user_ip_white_lists",
		Columns:    UserIPWhiteListsColumns,
		PrimaryKey: []*schema.Column{UserIPWhiteListsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_ip_white_lists_users_ip_white_list",
				Columns:    []*schema.Column{UserIPWhiteListsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		IPAccessControlsTable,
		IdentitiesTable,
		UsersTable,
		UserIPWhiteListsTable,
	}
)

func init() {
	IdentitiesTable.ForeignKeys[0].RefTable = UsersTable
	UserIPWhiteListsTable.ForeignKeys[0].RefTable = UsersTable
}
